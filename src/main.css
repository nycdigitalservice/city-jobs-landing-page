@import "../packages/css-reset/reset.css";
@import "../packages/components/card/card.css";

@custom-selector :--heading h1, h2, h3, h4, h5, h6;

:root {
  /* Reference tokens: set final values */
  --nyc-ref-color-blue-100: hsla(207, 71%, 68%, 1);
  --nyc-ref-color-blue-200: hsla(213, 53%, 50%, 1);
  --nyc-ref-color-blue-300: hsla(213, 59%, 45%, 1);
  --nyc-ref-color-blue-400: hsla(209, 100%, 42%, 1);
  --nyc-ref-color-blue-500: hsla(208, 100%, 30%, 1);
  --nyc-ref-color-blue-600: hsla(212, 75%, 28%, 1);
  --nyc-ref-color-blue-50: hsla(214, 54%, 95%, 1);
  --nyc-ref-color-orange-500: hsla(26, 92%, 58%, 1);
  --nyc-ref-color-orange-700: hsla(25, 78%, 41%, 1);
  --nyc-ref-color-purple-525: hsla(271, 61%, 35%, 0.25);
  --nyc-ref-color-neutral-0: hsla(0, 0%, 100%, 1);
  --nyc-ref-color-neutral-100: hsla(0, 0%, 93%, 1);
  --nyc-ref-color-neutral-200: hsla(0, 0%, 80%, 1);
  --nyc-ref-color-neutral-300: hsla(0, 0%, 57%, 1);
  --nyc-ref-color-neutral-400: hsla(0, 0%, 40%, 1);
  --nyc-ref-color-neutral-425: hsla(0, 0%, 40%, 0.25);
  --nyc-ref-color-neutral-900: hsla(0, 0%, 0%, 1);
  --nyc-ref-color-neutral-920: hsla(0, 0%, 0%, .2);
  --nyc-ref-color-neutral-925: hsla(0, 0%, 0%, .25);


  --nyc-ref-gradient-blue-1: linear-gradient(154.62deg, #0075D0 48.25%, #0D4D8B 92.24%);
  --nyc-ref-gradient-blue-2: linear-gradient(150.06deg, #0075D0 -11.53%, #0D4D8B 16.58%, #01194E 53.58%, #000B23 73.72%);

  --nyc-ref-shadow-200: 0px 4px 4px 0px var(--nyc-ref-color-neutral-425);
  --nyc-ref-shadow-300: 0px 4px 4px 0px var(--nyc-ref-color-purple-525);
  --nyc-ref-shadow-400: 4px 4px 8px var(--nyc-ref-color-neutral-920);
  --nyc-ref-shadow-450: 0 4px 8px var(--nyc-ref-color-neutral-920);
  --nyc-ref-shadow-500: 0 4px 4px var(--nyc-ref-color-neutral-925);

  --nyc-ref-font-family-sans: "Helvetica Neue", Helvetica, Arial, sans-serif;

  /* 73.125rem = 1170px */
  --nyc-ref-dimension-page-max-width: 73.125rem;

  --measure: 75ch;
  /* page-max-width: 1170px */
  --page-max-width: 73.125rem;
  --gutter: var(--size-step-0);

  /* Fluid size tokens, used for font sizes */

  /* @link https://utopia.fyi/type/calculator?c=320,18,1.2,1170,24,1.25,5,2,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l&g=s,l,xl,12 */

  /* Step -2: 12.50px → 15.36px */
  --size-step--2: clamp(0.78rem, calc(0.71rem + 0.34vw), 0.96rem);

  /* /\* Step -1: 15.00px → 19.20px *\/ */
  /* --size-step--1: clamp(0.94rem, calc(0.84rem + 0.49vw), 1.20rem); */

  /* Step -1: 16.00px → 20px */
  --size-step--1: clamp(1rem, calc(0.84rem + 0.49vw), 1.25rem);

  /* Step 05: 18.00px → 22.00px */
  --size-step--05: clamp(1.13rem, calc(0.98rem + 0.71vw), 1.375rem);
  /* Step 0: 18.00px → 24.00px */
  --size-step-0: clamp(1.13rem, calc(0.98rem + 0.71vw), 1.50rem);
  /* Step 0: 18.00px → 28.00px */
  --size-step-05: clamp(1.13rem, calc(0.98rem + 0.71vw), 1.75rem);

  /* Step 1: 21.60px → 30.00px */
  --size-step-1: clamp(1.35rem, calc(1.15rem + 0.99vw), 1.88rem);

  /* Step 2: 25.92px → 37.50px */
  --size-step-2: clamp(1.62rem, calc(1.35rem + 1.36vw), 2.34rem);

  /* Step 3: 31.10px → 46.88px */
  --size-step-3: clamp(1.94rem, calc(1.57rem + 1.86vw), 2.93rem);

  /* Step 4: 37.32px → 58.59px */
  --size-step-4: clamp(2.33rem, calc(1.83rem + 2.50vw), 3.66rem);

  /* Step 5: 44.79px → 73.24px */
  --size-step-5: clamp(2.80rem, calc(2.13rem + 3.35vw), 4.58rem);

  /* @link https://utopia.fyi/space/calculator?c=320,18,1.2,1170,24,1.25,5,2,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l&g=s,l,xl,12 */

  /* Space 3xs: 5px → 6px */
  --space-3xs: clamp(0.31rem, calc(0.29rem + 0.12vw), 0.38rem);

  /* Space 2xs: 9px → 12px */
  --space-2xs: clamp(0.56rem, calc(0.49rem + 0.35vw), 0.75rem);

  /* Space xs: 14px → 18px */
  --space-xs: clamp(0.88rem, calc(0.78rem + 0.47vw), 1.13rem);

  /* Space s: 18px → 24px */
  --space-s: clamp(1.13rem, calc(0.98rem + 0.71vw), 1.50rem);

  /* Space m: 27px → 36px */
  /* --space-m: clamp(1.69rem, calc(1.48rem + 1.06vw), 2.25rem); */
  /* Space m: 24px → 40px */
  --space-m: clamp(1.5rem, calc(1.48rem + 1.06vw), 2.5rem);

  /* Space l: 36px → 48px */
  --space-l: clamp(2.25rem, calc(1.97rem + 1.41vw), 3.00rem);

  /* Space xl: 54px → 72px */
  --space-xl: clamp(3.38rem, calc(2.95rem + 2.12vw), 4.50rem);

  /* Space 2xl: 72px → 96px */
  --space-2xl: clamp(4.50rem, calc(3.94rem + 2.82vw), 6.00rem);

  /* Space 3xl: 108px → 144px */
  --space-3xl: clamp(6.75rem, calc(5.90rem + 4.24vw), 9.00rem);

  /* One-up pairs */
  /* Space 3xs-2xs: 5px → 12px */
  --space-3xs-2xs: clamp(0.31rem, calc(0.15rem + 0.82vw), 0.75rem);

  /* Space 2xs-xs: 9px → 18px */
  --space-2xs-xs: clamp(0.56rem, calc(0.35rem + 1.06vw), 1.13rem);

  /* Space xs-s: 14px → 24px */
  --space-xs-s: clamp(0.88rem, calc(0.64rem + 1.18vw), 1.50rem);

  /* Space s-m: 18px → 36px */
  --space-s-m: clamp(1.13rem, calc(0.70rem + 2.12vw), 2.25rem);

  /* Space m-l: 27px → 48px */
  --space-m-l: clamp(1.69rem, calc(1.19rem + 2.47vw), 3.00rem);

  /* Space l-xl: 36px → 72px */
  --space-l-xl: clamp(2.25rem, calc(1.40rem + 4.24vw), 4.50rem);

  /* Space xl-2xl: 54px → 96px */
  --space-xl-2xl: clamp(3.38rem, calc(2.39rem + 4.94vw), 6.00rem);

  /* Space 2xl-3xl: 72px → 144px */
  --space-2xl-3xl: clamp(4.50rem, calc(2.81rem + 8.47vw), 9.00rem);

  /* Custom pairs */
  /* Space s-l: 18px → 48px */
  --space-s-l: clamp(1.13rem, calc(0.42rem + 3.53vw), 3.00rem);

  --space: var(--space-m);

  /* System tokens: semantic pointers to Reference tokens */
  --nyc-sys-color-primary: var(--nyc-ref-color-blue-400);
  --nyc-sys-color-on-primary: var(--nyc-ref-color-neutral-0);
  --nyc-sys-color-primary-dark: var(--nyc-ref-color-blue-500);
  --nyc-sys-color-primary-darker: var(--nyc-ref-color-blue-600);
  --nyc-sys-color-secondary: var(--nyc-ref-color-neutral-100);
  --nyc-sys-color-secondary-dark: var(--nyc-ref-color-neutral-300);
  --nyc-sys-color-secondary-darker: var(--nyc-ref-color-neutral-400);
  --nyc-sys-color-on-secondary-darker: var(--nyc-ref-color-neutral-0);
  --nyc-sys-color-tertiary: var(--nyc-ref-color-neutral-900);
  --nyc-sys-color-on-tertiary: var(--nyc-ref-color-neutral-0);
  --nyc-sys-color-focus: var(--nyc-ref-color-neutral-900);
  --nyc-sys-color-text: var(--nyc-ref-color-neutral-900);
  --nyc-sys-color-text-weak: var(--nyc-ref-color-neutral-400);
  --nyc-sys-color-background: var(--nyc-ref-color-neutral-0);
  --nyc-sys-color-border: var(--nyc-ref-color-neutral-200);
  --nyc-sys-gradient-primary: var(--nyc-ref-gradient-blue-1);
  --nyc-sys-gradient-primary-dark: var(--nyc-ref-gradient-blue-2);
  --nyc-sys-shadow-primary: var(--nyc-ref-shadow-300);
  --nyc-sys-shadow-base: var(--nyc-ref-shadow-500);
  --nyc-sys-shadow-weak: var(--nyc-ref-shadow-400);
  --nyc-sys-font-size-base: var(--size-step-0);
  --nyc-sys-font-family-base: "Helvetica Neue", Helvetica, Arial, sans-serif;

  /* Component tokens: Used within specific components, reference system tokens */
  --nyc-cmp-button-color: var(--nyc-sys-color-text, currentColor);
  --nyc-cmp-button-color-disabled: var(--nyc-sys-color-on-secondary-darker, currentColor);
  --nyc-cmp-button-background: var(--nyc-sys-color-background, transparent);
  --nyc-cmp-button-background-disabled: var(--nyc-sys-color-secondary-dark, transparent);
  --nyc-cmp-button-shadow: var(--nyc-sys-shadow-base);
  --nyc-cmp-button-border: 2px solid var(--nyc-sys-color-border);

  --nyc-cmp-input-background: var(--nyc-sys-color-background);
  --nyc-cmp-input-color: var(--nyc-sys-color-text-weak);
  --nyc-cmp-input-border: 1px solid var(--nyc-sys-color-border);
  --nyc-cmp-input-shadow: var(--nyc-sys-shadow-weak);
  --nyc-cmp-input-font: 400 1rem /3.25 var(--nyc-sys-font-family-base);

  --nyc-cmp-card-background: var(--nyc-sys-gradient-primary, transparent);
  --nyc-cmp-card-background-hover: var(--nyc-sys-gradient-primary-dark, transparent);
  --nyc-cmp-card-color: var(--nyc-sys-color-on-primary);
  --nyc-cmp-card-color-outline: var(--nyc-sys-color-on-primary);
  --nyc-cmp-card-shadow: var(--nyc-sys-shadow-base);

}

/*
Global styles

Low-specificity, global styles that apply to the whole
project: https://cube.fyi/css.html
 */
div,
header,
nav,
main,
footer {
  max-inline-size: none;
}

:--jobs {
  color: var(--nyc-sys-color-text);
  background: var(--color-light);
  font-size: var(--nyc-sys-font-size-base);
  font-family: var(--nyc-sys-font-family-base);
  line-height: 1.4;
  letter-spacing: var(--tracking);
  margin: 0;
}

ul[role=list] {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

/* Override nyc.gov global styles */
p {
  margin: 0;
}

li {
  line-height: 1.4;
}

form {
  margin: 0;
}

input,
select {
  font-family: inherit;
  font-weight: initial;
  background-color: inherit;
  color: unset;
  font-feature-settings: inherit;
  -webkit-appearance: none;
  appearance: none;
  border-radius: 0;
  box-shadow: none;
  border: none;
  margin: 0;
  padding: 0;
  height: auto;
}

/* Global Nav logo Override */
:root .header-nyc .header-inner .logo .nyc-logo {
  width: 200px;
  height: 32px;
}

:root .main-header .nyc-logo .logo {
  background: url(/assets/home/images/jobs/2023/jobsnyc-logo.png) no-repeat center center;
  background-size: contain;
  width: 200px;
  height: 32px;
}

@media screen and (max-width: 915px) {
  :root .header-nyc .header-inner .header-buttons, .header-nyc .header-inner .slogan {
    flex-basis: 15%;
  }
}

@media screen and (max-width: 475px) {
  :root .header-nyc .header-inner .logo .nyc-logo,
  :root .main-header .nyc-logo .logo {
    width: 150px;
    height: 32px;
  }
}

/* Base typesetting */
:--heading {
  line-height: 1;
  letter-spacing: var(--tracking-s);
  color: var(--nyc-sys-color-primary);
  margin: 0;
}

h1 {
  font-size: var(--size-step-5, 2.8rem);
}

h2 {
  font-size: var(--size-step-4, 2.33rem);
}

h3 {
  font-size: var(--size-step-2, 1.62rem);
}

p {
  max-inline-size: var(--measure);
}

/* Base interactive elements */

button {
  appearance: none;
  border: none;
  line-height: normal;
  box-sizing: border-box;
}

a, button {
  color: currentcolor;
  text-underline-offset: .2rem;

  &:hover {
    text-decoration: none;
  }

  &[disabled] {
    pointer-events: none;
  }
}

:focus {
  outline: 2px solid;
  outline-offset: 0.3ch;
  outline-color: var(--nyc-sys-color-focus);
}

:target {
  scroll-margin-top: 2ex;
}

main:focus {
  outline: none;
}

[class*="i-" ] {
  display: inline-block;
}

/* Base selection styles that invert whatever colours are rendered */
::selection {
  background: var(--color-dark);
  color: var(--color-light);
}

main {
  background: var(--nyc-sys-color-background);
}

/* Inputs */
input,
select {
  font-size: inherit;
  line-height: 2.25;
  padding-inline: 1rem;
  height: 3.375rem;
  background: var(--nyc-cmp-input-background);
  border: var(--nyc-cmp-input-border);
  border-radius: var(--nyc-cmp-input-border-radius, 0);
  color: var(--nyc-cmp-input-color);
  font: var(--nyc-cmp-input-font);
}

/* Composition */

/* AUTO GRID
Related Every Layout: https://every-layout.dev/layouts/grid/
More info on the flexible nature: https://piccalil.li/tutorial/create-a-responsive-grid-layout-with-no-media-queries-using-css-grid/
A flexible layout that will create an auto-fill grid with
configurable grid item sizes

CUSTOM PROPERTIES AND CONFIGURATION
--gutter (var(--space-s-m)): This defines the space
between each item.

--grid-min-item-size (14rem): How large each item should be
ideally, as a minimum.

--grid-placement (auto-fill): Set either auto-fit or auto-fill
to change how empty grid tracks are handled */
.grid {
  display: grid;
  gap: var(--gutter, var(--space-s-l));
}

@supports (width: min(250px, 100%)) {
  .grid {
    /* grid-template-columns: repeat(auto-fit, minmax(min(200px, 100%), 1fr)); */
    grid-template-columns: repeat(
      var(--grid-placement, auto-fill),
      minmax(var(--grid-min-item-size, 16rem), var(--grid-max-item-size, 1fr))
    );
  }
}

.grid > li {
  container: grid-item / inline-size;
  display: flex;
}

.grid[data-layout="1/4"] {
  --gutter: var(--space-s);
  --grid-placement: auto-fit;
  --grid-min-item-size: calc(( var(--page-max-width) - calc(var( --gutter ) * 3) ) / 4);
  /* --grid-min-item-size: 12.5rem; */
  grid-auto-rows: 1fr
}

.grid[data-layout="1/2"] {
  --grid-placement: auto-fit;
  --grid-min-item-size: 20rem;
  --gutter: var(--space-s-m);

  &[data-direction="reversed"] {
    & > :first-child {
      order: 2;
    }
  }
}

.grid[data-layout=figure-split] {
  grid-template-columns: 1fr;
  --gutter: 0;
}

@media (min-width: 768px) {
  .grid[data-layout=figure-split] {
    --gutter: var(--space-s-m);
    grid-template-columns: repeat(2, 1fr);
    grid-template-areas:
    "heading figure"
    "body figure";
    row-gap: 0;

    & :--heading {
      grid-area: heading;
    }

    & .figure {
      --space: 0;
      grid-area: figure;
    }

    & > * {
      grid-area: body;
    }

    &[data-split-direction=left] {
      grid-template-areas:
      "figure heading"
      "figure body";
    }
  }
}

[data-gap=m] {
  --gutter: var(--space-m);
}

/*
FLOW UTILITY
Like the Every Layout stack: https://every-layout.dev/layouts/stack/
Info about this implementation: https://piccalil.li/quick-tip/flow-utility/
 */
.flow > * + * {
  margin-top: 1em;
  margin-block-start: var(--space, 1em);
}

[data-flow-space=xs] {
  --space: var(--space-s);
}

[data-flow-space=s] {
  --space: var(--space-s);
}

/**
 * REGION
 * Add consistent vertical padding to create regions of content
 * Can either be configured by setting --region-space or use a default from the space scale
 */
.region {
  padding-top: 2.25rem;
  padding-bottom: 2.25rem;
  padding-block-start: var(--region-space, var(--space-l-xl, 2.25rem));
  padding-block-end: var(--region-space, var(--space-l-xl, 2.25rem));
  clear: both;
}

.region[data-region-space="s"] {
  --region-space: var(--space-s);
}

.region[data-region-space="m"] {
  --region-space: var(--space-m);
}

.region[data-region-space="l"] {
  --region-space: var(--space-l);
}

.region[data-region-space="s-m"] {
  --region-space: var(--space-s-m);
}

/* Centering */

.page-max {
  margin-inline: auto;
  max-width: var(--page-max-width);
}

.center {
  box-sizing: content-box;
  margin-inline: auto;

  max-inline-size: var(--page-max-width);
  padding-inline-start: var(--gutter);
  padding-inline-end: var(--gutter);
}


/* Layout - Reel */
.reel {
  display: flex;
  block-size: auto;
  overflow-x: auto;
  overflow-y: hidden;
  scrollbar-color: #ccc transparent;
  scroll-behavior: smooth;
}

.reel > * {
  flex: 0 0 auto;
  display: flex;
}


.reel > img {
  block-size: 100%;
  flex-basis: auto;
  width: auto;
}

.reel > * + * {
  margin-inline-start: 1rem;
}

.reel.overflowing {
  padding-block-end: 1rem;

  & ~ .reel__nav {
    visibility: visible;
  }
}

.reel::-webkit-scrollbar {
  block-size: .5rem;
}

.reel::-webkit-scrollbar-track {
  background-color: transparent;
}

.reel::-webkit-scrollbar-thumb {
  background-color: #ccc;
  border-radius: 10px;
  background-image: linear-gradient(tranparent 0, transparent 0.25rem, #ccc 0.25rem, #ccc 0.75rem, transparent 0.75rem);
}

.reel__nav {
  visibility: hidden;
  display: flex;
  justify-content: center;
  gap: 4rem;
}

.reel__nav button {
  width: 2.75rem;
  height: 2.75rem;
  border-radius: 9999px;
  justify-content: center;
  touch-action: none;
  box-shadow: none;

  /* TODO refactor how buttons deal with icons */
  & i:last-child {
    margin: 0;
  }
}

/* Full-bleed right */
.center--full-bleed-right {
  display: grid;
  grid-template-columns: 1fr min(calc( var( --page-max-width ) + var(--gutter) ), 100%) 1fr;
  padding-inline-start: var(--gutter);
  box-sizing: content-box;
}

.full-bleed {
  width: 100%;
  grid-column: 2 / 4;
}

/* Blocks */


/* BLOCK - Button */
.grid li > .button {
  display: flex;
  width: 100%;
  /* height: 100%; */
  /* box-sizing: border-box; */
}

.button {
  background-color: var(--nyc-cmp-button-background);
  color: var(--nyc-cmp-button-color);
  box-shadow: var(--nyc-cmp-button-shadow);
  padding: 1rem;
  font-size: 1.13rem;
  text-decoration: none;
  font-weight: 700;
  border-radius: 4px;
  display: inline-flex;
  align-items: center;
  justify-content: space-between;
  transition: all 0.3s ease;

  /* TODO refactor how buttons deal with icons */
  & > i:last-child {
    flex-shrink: 0;
    margin-left: 3rem;
    margin-inline-start: var(--space-s-l);
    margin-block: auto;
  }

  &[disabled] {
    color: var(--nyc-cmp-button-color-disabled);
    background: var(--nyc-cmp-button-background-disabled);
  }
}

.button[data-variant="primary"] {
  --nyc-cmp-button-background: var(--nyc-sys-color-primary);
  --nyc-cmp-button-color: var(--nyc-sys-color-on-primary);
  --nyc-cmp-button-shadow: var(--nyc-sys-shadow-primary);

  &:hover {
    --nyc-cmp-button-background: var(--nyc-sys-color-primary-dark);
  }

  &:active,
  &:visited {
    --nyc-cmp-button-background: var(--nyc-sys-color-primary-darker);
  }

  &[disabled] {
    --nyc-cmp-button-background: var(--nyc-sys-color-primary);
    box-shadow: none;
  }
}

.button[data-variant="secondary"] {
  --nyc-cmp-button-background: var(--nyc-sys-color-secondary);
  font-size: 1rem;

  &:hover {
    --nyc-cmp-button-background: var(--nyc-sys-color-secondary-dark);
  }

  &:active,
  &:visited {
    --nyc-cmp-button-background: var(--nyc-sys-color-secondary-darker);
    --nyc-cmp-button-color: var(--nyc-sys-color-on-secondary-darker);
  }
}

.button[data-variant="tertiary"] {
  --nyc-cmp-button-background: var(--nyc-sys-color-tertiary);
  --nyc-cmp-button-color: var(--nyc-sys-color-on-tertiary);

  &:hover {
    --nyc-cmp-button-background: var(--nyc-sys-color-primary);
  }
}

.button[data-variant="tile"] {
  --nyc-cmp-button-shadow: var(--nyc-sys-shadow-weak);
  /* font-size: var(--size-step-2); */
  --fs: clamp(1.00rem, calc(0.83rem + 0.85vw), 1.38rem);
  font-size: var(--fs);
  flex-wrap: wrap;
  height: 100%;
  align-items: auto;
  min-block-size: 2.5rem;
  --modifier: calc(18rem - 100%);
  /* flex-direction: column; */

  & > * {
    flex-grow: 1;
    flex-basis: calc(var(--modifier) * 999);
  }

  & i {
    font-size: calc(var(--fs) * 1.2);
  }

  & .title {
    --modifier: calc(20rem - 100%);
    flex-basis: 0;
    min-inline-size: 85%;
    /* flex-grow: 999; */
  }

  & > :last-child {
    --modifier: calc(18rem - 100%);
    display: flex;
    justify-content: flex-end;
    align-items: flex-end;
    margin-block-start: 1.5rem;
  }
}

.button[data-variant="outline"],
.button[data-variant="tile"] {
  border: var(--nyc-cmp-button-border);
  box-shadow: var(--nyc-cmp-button-shadow);
  &:hover {
    background: var(--nyc-ref-color-blue-50);
    color: var(--nyc-sys-color-primary);
    border-color: var(--nyc-sys-color-primary);
  }
}

/* BLOCK - Select */

.select {
  position: relative;
  display: flex;

  & select {
    padding-inline-end: 3rem;
    width: 100%;
    box-shadow: var(--nyc-sys-shadow-weak);
  }

  & i {
    position: absolute;
    pointer-events: none;
    font-size: 2rem;
    inset-inline-end: .75rem;
    height: 100%;
  }
}

/* BLOCK - Header */

.o-header {
  background: #0070D7 url(/assets/home/images/jobs/2023/header-bg.svg) no-repeat center center;
  background-image: url(/assets/home/images/jobs/2023/header-bg.webp);
  background-size: cover;
  color: var(--nyc-sys-color-on-primary);

  & :focus {
    outline-color: var(--nyc-sys-color-on-primary);
  }

  & :--heading {
    color: var(--nyc-sys-color-on-primary);
  }
}

:root .no-webp .o-header {
  background-image: url(/assets/home/images/jobs/2023/header-bg.png) !important;
}

/* BLOCK - Search */

.form[data-variant=search] {
  display: flex;
  position: relative;
  width: 100%;
  & input[type="search"] {
    flex-grow: 1;
    transition: padding 0.3s ease;
    width: 100%;
    box-sizing: border-box;
    box-shadow: var(--nyc-ref-shadow-450);
    &:focus {
      padding-inline-end: 2.25rem;
      outline-color: var(--nyc-sys-color-on-primary);
      & ~ nyc-clear-input-button {
        opacity: 1;
        pointer-events: auto;
      }
    }
  }
  & button[type="submit"] {
    padding-inline: .91rem;
    padding-block: 0;
    border-radius: 0;
    /* box-shadow: none; */

    & i {
      font-size: 1.25rem;
      margin: 0;
    }
  }
}

.form-group nyc-clear-input-button {
  position: absolute;
  right: 0;
  top: 0;
  height: 100%;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s ease;
  background: transparent;
  color: var(--nyc-cmp-input-color);
  display: flex;
  align-items: center;
  cursor: pointer;
  &:focus {
    opacity: 1;
  }

  &:not(:defined) {
    visibility: hidden;
  }
}

/* BLOCK - Form */
.form, nyc-form {
  display: flex;
  flex-wrap: wrap;
}

.form-group {
  flex-grow: 1;
  position: relative;
}

/* Utilities */

.background-primary {
  background-color: var(--nyc-sys-color-primary);
  color: var(--nyc-sys-color-on-primary);
}

.background-secondary {
  background-color: var(--nyc-sys-color-secondary);
}

.background-base {
  background-color: var(--nyc-sys-color-background);
}

.background-neutral {
  background-color: var(--nyc-sys-color-neutral);
  color: var(--nyc-sys-color-on-neutral);
}

.text-xs {
  font-size: var(--size-step--1);
  line-height: 1.2em;
}

.text-md-2 {
  font-size: var(--size-step--05);
}

.text-primary {
  color: var(--nyc-sys-color-primary);
}

.ie-only {
  display: none;
}

@media screen and (-ms-high-contrast: active),
screen and (-ms-high-contrast: none) {
  /* IE10+ specific styles go here */
  .ie-only {
    display: block;
  }

  :--jobs {
    font-size: 1.5rem;
  }

  h1 {
    font-size: 4.58rem;
  }

  h2 {
    font-size: 3rem;
  }

  .text-xs {
    font-size: 1.25rem;
  }

  .flow > * + * {
    margin-top: 2.5rem;
  }

  .region {
    padding-top: 4.5rem;
    padding-bottom: 4.5rem;
  }


  .grid[data-layout="1/4"] {
    display: inline;
    > * {
      display: inline-block;
      width: 22%;
      height: 4.75rem;
      margin-right: 1.5rem;
      margin-bottom: 1.5rem;
    }
    > li:nth-child(4n) {
      margin-right: 0;
    }
  }

  .grid > li > .button {
    height: 100%;
  }

  .select select {
    padding-right: 0;
  }

  .center--full-bleed-right {
    max-width: var(--page-max-width);
    width: 100%;
    margin-top: 2.5rem;
    margin-left: auto;
    margin-right: auto;
    display: none;
  }

  .button[data-variant=primary] {
    background: var(--nyc-sys-color-primary);
    color: var(--nyc-sys-color-on-primary);
  }

  .button[data-variant=secondary] {
    background: var(--nyc-sys-color-secondary);
    color: var(--nyc-sys-color-on-secondary);
  }

  .search-button-label {
    position: relative;
    width: 100px;
    font-size: 18px;
    color: white;
    height: 54px;
    margin:0;
    clip: unset;
  }

  [class*="i-ri:"] {
    display: none;
  }
}

@media not all and (min-resolution:.001dpcm) {
  @supports (-webkit-appearance:none) and (not (stroke-color:transparent)) {
    /* Safari 10.1 specific styles go here */
    :--jobs {
      font-size: 1.5rem;
    }

    h1 {
      font-size: 4.58rem;
    }

    h2 {
      font-size: 3rem;
    }

    .text-xs {
      font-size: 1.25rem;
    }


    .flow > * + * {
      margin-top: 2.5rem;
    }

    .region {
      padding-top: 4.5rem;
      padding-bottom: 4.5rem;
    }

    .reel__nav button {
      display: block;
      margin: 0 3rem;
    }

    .button > i:last-child {
      margin-left: 3rem;
    }

    .grid[data-layout="1/4"] {
      grid-template-columns: repeat(auto-fit, 350px);
      > * {
        margin-right: 1.5rem;
        margin-bottom: 1.5rem;
      }
    }

    .center--full-bleed-right {
      grid-template-columns: 1fr minmax(var(--page-max-width), 1fr) 1fr;
      /* grid-template-columns: 1fr min(calc( var( --page-max-width ) + var(--gutter) ), 100%) 1fr; */
    }

    .md\:gap-10 > * + *{
      margin-left: 2.5rem;
    }
  }
}
